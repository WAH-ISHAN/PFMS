-- USERS
CREATE TABLE app_users (
    id NUMBER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    name VARCHAR2(100) NOT NULL,
    email VARCHAR2(150) UNIQUE NOT NULL,
    password_hash VARCHAR2(255) NOT NULL,
    role VARCHAR2(20) DEFAULT 'USER' CHECK(role IN ('USER','ADMIN')),
    google_id VARCHAR2(150),
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP
);

CREATE UNIQUE INDEX idx_app_users_email ON app_users(email);

-- EXPENSES
CREATE TABLE expenses (
    id NUMBER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    user_id NUMBER NOT NULL REFERENCES app_users(id),
    category VARCHAR2(50),
    amount NUMBER(10,2),
    expense_date DATE DEFAULT SYSDATE,
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP
);

CREATE INDEX idx_expenses_user ON expenses(user_id);

-- BUDGETS
CREATE TABLE budgets (
    id NUMBER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    user_id NUMBER NOT NULL REFERENCES app_users(id),
    category VARCHAR2(50),
    amount NUMBER(10,2),
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP
);

CREATE INDEX idx_budgets_user ON budgets(user_id);

-- SAVINGS
CREATE TABLE savings (
    id NUMBER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    user_id NUMBER NOT NULL REFERENCES app_users(id),
    goal_name VARCHAR2(100),
    target_amount NUMBER(10,2),
    current_amount NUMBER(10,2) DEFAULT 0,
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP
);

CREATE INDEX idx_savings_user ON savings(user_id);

-- BLOG POSTS
CREATE TABLE blog_posts (
    id NUMBER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    title VARCHAR2(255),
    content CLOB,
    author_id NUMBER REFERENCES app_users(id),
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP
);

-- PASSWORD RESET (OTP)
CREATE TABLE password_resets (
    id NUMBER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    user_id NUMBER NOT NULL REFERENCES app_users(id),
    otp_code VARCHAR2(10) NOT NULL,
    expires_at TIMESTAMP NOT NULL,
    used NUMBER(1) DEFAULT 0 CHECK (used IN (0,1)),
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP
);

CREATE INDEX idx_password_resets_user ON password_resets(user_id);

-- OPTIONAL: CONTACT MESSAGES
CREATE TABLE contact_messages (
    id NUMBER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    name VARCHAR2(100),
    email VARCHAR2(150),
    subject VARCHAR2(255),
    message CLOB,
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP
);